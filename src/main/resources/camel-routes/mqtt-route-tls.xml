<?xml version="1.0" encoding="utf-8" ?>
<routes xmlns="http://camel.apache.org/schema/spring">
    <route id="xml-cloud-client">
        <from uri="paho-mqtt5:{{cloud.rootTopic}}/#?brokerUrl={{cloud.brokerUrl}}&amp;qos=1&amp;userName={{cloud.username}}&amp;password={{cloud.password}}&amp;sslClientProps.com.ibm.ssl.keyStore={{cloud.keyStore}}&amp;sslClientProps.com.ibm.ssl.keyStorePassword={{cloud.keyStorePwd}}&amp;sslClientProps.com.ibm.ssl.trustStore={{cloud.trustStore}}&amp;sslClientProps.com.ibm.ssl.trustStorePassword={{cloud.trustStorePwd}}&amp;clientId=cloudMqtt1&amp;cleanStart=false" />
        <onException id="cloud-client-error-handler">
            <exception>java.lang.Exception</exception>
            <redeliveryPolicy
                    retryAttemptedLogLevel="{{mqtt.retry.retryAttemptedLogLevel}}"
                    maximumRedeliveries="{{mqtt.retry.maximumRedeliveries}}"
                    redeliveryDelay="{{mqtt.retry.redeliveryDelay}}"
                    backOffMultiplier="{{mqtt.retry.backOffMultiplier}}"
                    useCollisionAvoidance="{{mqtt.retry.useCollisionAvoidance}}"
                    collisionAvoidanceFactor="{{mqtt.retry.collisionAvoidanceFactor}}"
                    useExponentialBackOff="{{mqtt.retry.useExponentialBackOff}}"
                    maximumRedeliveryDelay="{{mqtt.retry.maximumRedeliveryDelay}}"/>
            <handled>
                <constant>true</constant>
            </handled>
        </onException>
        <choice>
            <when>
                <simple>${header.CamelMqttTopic} contains 'req'</simple>
                <toD uri="caracal-mqtt:${headers.CamelMqttTopic.substring({{cloud.rootTopicPrefixLength}})}?brokerUrl={{server.brokerUrl}}&amp;userName={{server.username}}&amp;password={{server.password}}&amp;qos=1&amp;keyStore={{server.keyStore}}&amp;keyStorePassword={{server.keyStorePwd}}&amp;trustStore={{server.trustStore}}&amp;trustStorePassword={{server.trustStorePwd}}" />
            </when>
        </choice>
    </route>

    <route id="xml-client-cloud">
        <from uri="paho-mqtt5:{{server.rootTopic}}/#?brokerUrl={{server.brokerUrl}}&amp;qos=1&amp;userName={{server.username}}&amp;password={{server.password}}&amp;sslClientProps.com.ibm.ssl.keyStore={{server.keyStore}}&amp;sslClientProps.com.ibm.ssl.keyStorePassword={{server.keyStorePwd}}&amp;sslClientProps.com.ibm.ssl.trustStore={{server.trustStore}}&amp;sslClientProps.com.ibm.ssl.trustStorePassword={{server.trustStorePwd}}&amp;clientId=serverMqtt1&amp;cleanStart=false" />
        <onException id="client-cloud-error-handler">
            <exception>java.lang.Exception</exception>
            <redeliveryPolicy
                    retryAttemptedLogLevel="{{mqtt.retry.retryAttemptedLogLevel}}"
                    maximumRedeliveries="{{mqtt.retry.maximumRedeliveries}}"
                    redeliveryDelay="{{mqtt.retry.redeliveryDelay}}"
                    backOffMultiplier="{{mqtt.retry.backOffMultiplier}}"
                    useCollisionAvoidance="{{mqtt.retry.useCollisionAvoidance}}"
                    collisionAvoidanceFactor="{{mqtt.retry.collisionAvoidanceFactor}}"
                    useExponentialBackOff="{{mqtt.retry.useExponentialBackOff}}"
                    maximumRedeliveryDelay="{{mqtt.retry.maximumRedeliveryDelay}}"/>
            <handled>
                <constant>true</constant>
            </handled>
            <to uri="controlbus:route?routeId=xml-client-cloud&amp;action=restart" id="client-cloud-restart" />
        </onException>
        <choice>
            <when>
                <simple>${header.CamelMqttTopic} !contains 'req' &amp;&amp; ${header.CamelMqttTopic} !contains 'rsp'</simple>
                <toD uri="paho-mqtt5:{{cloud.rootTopicPrefix}}${headers.CamelMqttTopic}?automaticReconnect=true&amp;maxReconnectDelay=1000&amp;brokerUrl={{cloud.brokerUrl}}&amp;qos=1&amp;userName={{cloud.username}}&amp;password={{cloud.password}}&amp;retained=true&amp;sslClientProps.com.ibm.ssl.keyStore={{cloud.keyStore}}&amp;sslClientProps.com.ibm.ssl.keyStorePassword={{cloud.keyStorePwd}}&amp;sslClientProps.com.ibm.ssl.trustStore={{cloud.trustStore}}&amp;sslClientProps.com.ibm.ssl.trustStorePassword={{cloud.trustStorePwd}}&amp;clientId=cloudMqtt2&amp;cleanStart=false" />
            </when>
            <when>
                <simple>${header.CamelMqttTopic} !contains 'req'</simple>
                <toD uri="paho-mqtt5:{{cloud.rootTopicPrefix}}${headers.CamelMqttTopic}?automaticReconnect=true&amp;maxReconnectDelay=1000&amp;brokerUrl={{cloud.brokerUrl}}&amp;qos=1&amp;userName={{cloud.username}}&amp;password={{cloud.password}}&amp;sslClientProps.com.ibm.ssl.keyStore={{cloud.keyStore}}&amp;sslClientProps.com.ibm.ssl.keyStorePassword={{cloud.keyStorePwd}}&amp;sslClientProps.com.ibm.ssl.trustStore={{cloud.trustStore}}&amp;sslClientProps.com.ibm.ssl.trustStorePassword={{cloud.trustStorePwd}}&amp;clientId=cloudMqtt3&amp;cleanStart=false" />
            </when>
        </choice>
    </route>
</routes>